import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from scipy import signal
import scipy as sp
from scipy.signal import savgol_filter
import os
import pandas as pd

data_stacks = 1
t_begin = 0
t_end = 1
samplingfreq = 1000
X=np.linspace(t_begin, t_end, samplingfreq)
Y=np.sin(2*np.pi*50*X) + 0.5*np.sin(2*np.pi*120*X)


mean = np.mean(Y)
std = np.std(Y)
Y_std = (Y-mean)/std
skewness = sp.stats.skew(Y_std)
kurtosis = sp.stats.kurtosis(Y_std)
crest_factor = np.max(Y)/np.sqrt(np.mean(Y**2))
k_factor = np.max(Y)/np.mean(Y)



freq, Psd = signal.welch(Y, samplingfreq, nperseg=1024)

Y_fft = np.fft.fft(Y)

Mag = np.abs(Y_fft)
Phase = np.angle(Y_fft)

frequencies = np.fft.fftfreq(len(Y), (t_begin - t_end)/samplingfreq)

window_size = 11
order = 2   

Y_savgol=savgol_filter(Y, window_size, order)
i=10

dir_path = os.path.join(os.getcwd(), 'plots')
if not os.path.exists(dir_path):
    os.makedirs(dir_path)

for i in range(0, data_stacks):
    Y_fft = np.fft.fft(Y)
    frequencies = np.fft.fftfreq(len(Y), (t_begin - t_end)/samplingfreq)

    plt.plot(frequencies, abs(Y_fft))
    plt.xlabel('Frequency [Hz]')
    plt.ylabel('Amplitude')
    file_path = os.path.join(dir_path, 'fft'+str(i)+'.png')
    plt.savefig(file_path)
    plt.clf()
    plt.semilogy(freq, Psd)
    file_path = os.path.join(dir_path, 'psd'+str(i)+'.png')
    plt.savefig(file_path)
    plt.clf()
    plt.plot(X, Y)
    plt.savefig(file_path)
    file_path = os.path.join(dir_path, 'original'+str(i)+'.png')
    plt.clf()
    plt.plot(X, Y_savgol)
    file_path = os.path.join(dir_path, 'savgol'+str(i)+'.png')
    plt.savefig(file_path)
    plt.clf()
    #save figures in vs code folder python